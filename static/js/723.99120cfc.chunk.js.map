{"version":3,"file":"static/js/723.99120cfc.chunk.js","mappings":"4OACA,GAAgB,SAAW,wBAAwB,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sBAAsB,OAAS,uB,SC4H7IA,GAAiBC,EAAAA,EAAAA,GAAU,CAC7BC,KAAM,SADaD,EAlHL,SAAHE,GAA+B,IAA1BC,EAAYD,EAAZC,aAAcC,EAAKF,EAALE,MAChC,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAAUH,EAAaI,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,YAAY,QACZC,KAAK,QACLC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,QAGfP,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,YAAY,WACZC,KAAK,WACLK,KAAK,WACLJ,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,QAGfV,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACO,KAAK,WAAWL,KAAK,aAAaC,UAAW,UAAW,mBAGjEP,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACGH,IAASI,EAAAA,EAAAA,KAAA,OAAKS,UAAWC,EAAAA,EAAAA,UAAgBX,SAAEH,KAC5CI,EAAAA,EAAAA,KAAA,UAAQS,UAAWE,EAAAA,OAAeZ,SAAC,eAsF3C,IA2BA,GAAea,EAAAA,EAAAA,KAJO,SAACC,GAAK,MAAI,CAC5BC,OAAQD,EAAME,KAAKD,OACtB,GAEuC,CAACE,MAAAA,EAAAA,IAAzC,EArBc,SAAHC,GAAyB,IAApBD,EAAKC,EAALD,MAIZ,OAJwBC,EAANH,QAIAd,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,CAACC,GAAI,cAG5BnB,EAAAA,EAAAA,KAAA,OAAKS,UAAWE,EAAAA,SAAiBZ,UAC/BF,EAAAA,EAAAA,MAAA,OAAKY,UAAWE,EAAAA,KAAaZ,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIS,UAAWE,EAAAA,MAAcZ,SAAC,WAC9BC,EAAAA,EAAAA,KAACT,EAAc,CAACO,SATT,SAACsB,GACfJ,EAAMI,EAASC,MAAMD,EAASE,SAAUF,EAASG,WAClD,EAO4Cd,UAAWE,EAAAA,aAK3D,G","sources":["webpack://my-app/./src/Components/Login/login.module.css?07ae","Components/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainform\":\"login_mainform__MGDKw\",\"form\":\"login_form__wxsuG\",\"title\":\"login_title__+mDyn\",\"sumbit\":\"login_sumbit__Zv64f\",\"button\":\"login_button__DvM6A\"};","//import { Formik } from \"formik\"; //новая библиотека\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { required } from \"../../Utils/Validators\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport { connect } from \"react-redux\";\r\nimport {login } from './../../redux/authReducer'\r\nimport { Navigate} from \"react-router-dom\";\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\nimport classes from './login.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"email\"\r\n          name=\"email\"\r\n          component={Input}\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          component={Input}\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field type=\"checkbox\" name=\"rememberMe\" component={\"input\"} /> Remember\r\n        me\r\n      </div>\r\n      <div>\r\n        {error && <div className={style.errorForm}>{error}</div>}\r\n        <button className={classes.button}>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n // <Formik\r\n    //   initialValues={{ login: \"\", password: \"\", email: \"\", checkbox: \"\" }}\r\n    //   // validate={values => {\r\n    //   //   const errors = {};\r\n    //   //   if (!values.email) {\r\n    //   //     errors.email = 'Required';\r\n    //   //   } else if (\r\n    //   //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n    //   //   ) {\r\n    //   //     errors.email = 'Invalid email address';\r\n    //   //   }\r\n    //   //   return errors;\r\n    //   // }}\r\n    //   onSubmit={(values, { setSubmitting }) => {\r\n    //     setTimeout(() => {\r\n    //       alert(JSON.stringify(values, null, 2));\r\n    //       setSubmitting(false);\r\n    //     }, 400);\r\n    //   }}\r\n    // >\r\n    //   {({\r\n    //     values,\r\n    //     errors,\r\n    //     touched,\r\n    //     handleChange,\r\n    //     handleBlur,\r\n    //     handleSubmit,\r\n    //     isSubmitting,\r\n    //   }) => (\r\n    //     <form onSubmit={handleSubmit}>\r\n    //       <div>\r\n    //         <input\r\n    //           type=\"login\"\r\n    //           name=\"login\"\r\n    //           placeholder=\"login\"\r\n    //           onChange={handleChange}\r\n    //           onBlur={handleBlur}\r\n    //           value={values.login}\r\n    //         />\r\n    //       </div>\r\n    //       {errors.email && touched.email && errors.email}\r\n    //       <div>\r\n    //         {\" \"}\r\n    //         <input\r\n    //           type=\"password\"\r\n    //           name=\"password\"\r\n    //           placeholder=\"password\"\r\n    //           onChange={handleChange}\r\n    //           onBlur={handleBlur}\r\n    //           value={values.password}\r\n    //         />\r\n    //       </div>\r\n    //       <div>\r\n    //         {\" \"}\r\n    //         <input\r\n    //           type=\"email\"\r\n    //           name=\"email\"\r\n    //           placeholder=\"email\"\r\n    //           onChange={handleChange}\r\n    //           onBlur={handleBlur}\r\n    //           value={values.email}\r\n    //         />\r\n    //       </div>\r\n    //       <div>\r\n    //         <input\r\n    //           type=\"checkbox\"\r\n    //           name=\"remember me\"\r\n    //           onChange={handleChange}\r\n    //           onBlur={handleBlur}\r\n    //           value={values.checkbox}\r\n    //         />\r\n    //         Remember me\r\n    //       </div>\r\n    //       {errors.password && touched.password && errors.password}\r\n    //       <button type=\"submit\" disabled={isSubmitting}>\r\n    //         Submit\r\n    //       </button>\r\n    //     </form>\r\n    //   )}\r\n    // </Formik>\r\n  \r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm)\r\n\r\nconst Login = ({login,isAuth }) => {\r\n    const onSubmit=(formData)=>{\r\n     login(formData.email,formData.password, formData.rememberMe)\r\n    }\r\n    if(isAuth) return <Navigate to={\"/profile\"}/>\r\n    else{\r\n      return (\r\n        <div className={classes.mainform}>\r\n          <div className={classes.form}>\r\n            <h1 className={classes.title}>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} className={classes.submit} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n};\r\n\r\nconst mapStateToProps=(state)=>({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect (mapStateToProps,{login}) (Login)\r\n"],"names":["LoginReduxForm","reduxForm","form","_ref","handleSubmit","error","_jsxs","onSubmit","children","_jsx","Field","placeholder","name","component","Input","validate","required","type","className","style","classes","connect","state","isAuth","auth","login","_ref2","Navigate","to","formData","email","password","rememberMe"],"sourceRoot":""}